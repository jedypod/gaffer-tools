import Gaffer
import GafferImage
import GafferOSL
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "cn", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "pv", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "lx", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "rp", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["contrast"] = Gaffer.FloatPlug( "contrast", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["contrast"] )
__children["BoxIn2"] = Gaffer.BoxIn( "BoxIn2" )
parent.addChild( __children["BoxIn2"] )
__children["BoxIn2"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["pivot"] = Gaffer.FloatPlug( "pivot", defaultValue = 0.18000000715255737, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["pivot"] )
__children["BoxIn3"] = Gaffer.BoxIn( "BoxIn3" )
parent.addChild( __children["BoxIn3"] )
__children["BoxIn3"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["BoxIn3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["linearExtension"] = Gaffer.IntPlug( "linearExtension", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["linearExtension"] )
__children["BoxIn4"] = Gaffer.BoxIn( "BoxIn4" )
parent.addChild( __children["BoxIn4"] )
__children["BoxIn4"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["BoxIn4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ratioPreserve"] = Gaffer.IntPlug( "ratioPreserve", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["ratioPreserve"] )
__children["OSLImage"]["in"].setInput( __children["BoxIn"]["out"] )
__children["OSLImage"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["out"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( -17.7150421, 9.34525871 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 0 )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -17.7150421, 17.67729 ) )
__children["BoxOut"]["in"].setInput( __children["OSLImage"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["passThrough"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -16.2150383, 1.01322746 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 6 )
__children["OSLCode"]["parameters"]["cn"].setInput( __children["BoxIn1"]["out"] )
__children["OSLCode"]["parameters"]["pv"].setInput( __children["BoxIn2"]["out"] )
__children["OSLCode"]["parameters"]["lx"].setInput( __children["BoxIn3"]["out"] )
__children["OSLCode"]["parameters"]["rp"].setInput( __children["BoxIn4"]["out"] )
__children["OSLCode"]["code"].setValue( 'color rgb = inLayer("", 0);\n\n// https://www.desmos.com/calculator/qlkpwyydxi\nfloat con(float x, float c, float p, int lx) {\n\tfloat y = x <= 0 ? x : p*pow(x/p, c);\n\tif (lx != 0 && x > p) y = c*(x-p)+p;\n\treturn y;\n}\n\nif (rp) {\n\tfloat mx = max(rgb.r, max(rgb.g, rgb.b));\n\tfloat s = con(mx, cn, pv, lx)/mx;\n\tout = (color) rgb*s;\n} else {\n\tout = color(con(rgb.r, cn, pv, lx), con(rgb.g, cn, pv, lx), con(rgb.b, cn, pv, lx));\n}' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -31.1771984, 9.94525909 ) )
__children["BoxIn1"]["name"].setValue( 'contrast' )
__children["BoxIn1"]["__in"].setInput( __children["contrast"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'label', 'c' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -43.9010582, 11.7452593 ) )
Gaffer.Metadata.registerValue( __children["contrast"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["contrast"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["contrast"], 'description', 'Adjusts the "contrast" of the input image with a pivoted power function.' )
Gaffer.Metadata.registerValue( __children["contrast"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["contrast"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["contrast"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["contrast"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["contrast"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["contrast"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["contrast"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["contrast"], 'deletable', True )
__children["BoxIn2"]["name"].setValue( 'pivot' )
__children["BoxIn2"]["__in"].setInput( __children["pivot"] )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'label', 'pv' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn2"]["__uiPosition"].setValue( imath.V2f( -42.9628258, 10.5452595 ) )
Gaffer.Metadata.registerValue( __children["pivot"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["pivot"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["pivot"], 'description', 'The pivot of the power function, where the input image value is not changed.' )
Gaffer.Metadata.registerValue( __children["pivot"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["pivot"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["pivot"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["pivot"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["pivot"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["pivot"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["pivot"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["pivot"], 'deletable', True )
__children["BoxIn3"]["name"].setValue( 'linearExtension' )
__children["BoxIn3"]["__in"].setInput( __children["linearExtension"] )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'label', 'lx' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn3"]["__uiPosition"].setValue( imath.V2f( -45.8859215, 9.34525967 ) )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'description', 'If enabled, a linear extension will be used above the pivot point. Reduces the strength of the contrast in highlights.' )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'plugValueWidget:type', 'GafferUI.BoolPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["linearExtension"], 'deletable', True )
__children["BoxIn4"]["name"].setValue( 'ratioPreserve' )
__children["BoxIn4"]["__in"].setInput( __children["ratioPreserve"] )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'label', 'rp' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn4"]["__uiPosition"].setValue( imath.V2f( -45.3507652, 8.1452589 ) )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'description', 'If enabled, color will not be affected. RGB Ratios will be preserved. Could be desired or not depending on the use-case.' )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'plugValueWidget:type', 'GafferUI.BoolPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["ratioPreserve"], 'divider', True )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'description', 'Multiply input RGB by a 3x3 matrix. m0, m1, and m2 are the rows of the matrix. Invert inverts the matrix.' )
Gaffer.Metadata.registerValue( parent, 'documentation:url', '' )
Gaffer.Metadata.registerValue( parent, 'layout:section:Node:summary', 'Adjusts the "contrast" of the input image using a pivoted power function. Includes options for a linear extension above the pivot point, and an option to preserve the input RGB ratios if desired.' )


del __children

