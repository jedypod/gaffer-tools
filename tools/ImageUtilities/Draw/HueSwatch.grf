import Gaffer
import GafferImage
import GafferOSL
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "hue", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "valQ", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "satQ", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "valM", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["hue"] = Gaffer.FloatPlug( "hue", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["hue"] )
__children["format"] = Gaffer.V2iPlug( "format", defaultValue = imath.V2i( 512, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["format"] )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p1", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = -2147483648, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = -2147483648, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn3"] = Gaffer.BoxIn( "BoxIn3" )
parent.addChild( __children["BoxIn3"] )
__children["BoxIn3"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["BoxIn3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["valQ"] = Gaffer.IntPlug( "valQ", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["valQ"] )
__children["BoxIn4"] = Gaffer.BoxIn( "BoxIn4" )
parent.addChild( __children["BoxIn4"] )
__children["BoxIn4"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["BoxIn4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["satQ"] = Gaffer.IntPlug( "satQ", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["satQ"] )
__children["BoxIn5"] = Gaffer.BoxIn( "BoxIn5" )
parent.addChild( __children["BoxIn5"] )
__children["BoxIn5"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["valM"] = Gaffer.FloatPlug( "valM", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["valM"] )
__children["BoxOut"]["in"].setInput( __children["OSLImage"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -1.49999988, -30.6654415 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 6 )
__children["OSLImage"]["defaultFormat"]["displayWindow"]["min"].setValue( imath.V2i( 0, 0 ) )
Gaffer.Metadata.registerValue( __children["OSLImage"]["defaultFormat"], 'formatPlugValueWidget:mode', 'custom' )
__children["OSLImage"]["defaultFormat"]["displayWindow"]["max"].setInput( __children["Expression"]["__out"] )
__children["OSLImage"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["out"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( -3, -20.6320343 ) )
__children["OSLCode"]["parameters"]["hue"].setInput( __children["BoxIn"]["out"] )
__children["OSLCode"]["parameters"]["valQ"].setInput( __children["BoxIn3"]["out"] )
__children["OSLCode"]["parameters"]["satQ"].setInput( __children["BoxIn4"]["out"] )
__children["OSLCode"]["parameters"]["valM"].setInput( __children["BoxIn5"]["out"] )
__children["OSLCode"]["code"].setValue( 'float quantize(float x, float steps) { return round(x*steps+0.5001)/steps; }\n\nfloat sat = satQ>0 ? quantize(1-v, satQ) : 1-v;\nfloat val = valQ>0 ? quantize(u, valQ) : u;\nval = pow(val,2.4);\n\nout = color("hsv", hue/6, sat, val*valM);' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -16.4621582, -20.0320339 ) )
__children["BoxIn"]["name"].setValue( 'hue' )
__children["BoxIn"]["__in"].setInput( __children["hue"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'label', 'hue' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -27.8483696, -18.2320328 ) )
Gaffer.Metadata.registerValue( __children["hue"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["hue"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["hue"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["hue"], 'description', 'Hue of the hue swatch. The range is 0-6. 0 is red, and each primary and secondary are 1 unit apart.\n0 == Red\n1 == Yellow\n2 == Green\n3 == Cyan\n4 == Blue\n5 == Magenta\n6 == Red' )
Gaffer.Metadata.registerValue( __children["hue"], 'label', 'hue' )
Gaffer.Metadata.registerValue( __children["hue"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["hue"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["hue"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["hue"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["hue"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["hue"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["hue"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["hue"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["hue"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["hue"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["format"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["format"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["format"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["format"], 'description', 'Specify the size of the output hue swatch. Height = 0 means square.' )
__children["Expression"]["__in"]["p0"].setInput( __children["format"]["x"] )
__children["Expression"]["__in"]["p1"].setInput( __children["format"]["y"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 1.62688255, -19.4848537 ) )
__children["BoxIn3"]["name"].setValue( 'valQ' )
__children["BoxIn3"]["__in"].setInput( __children["valQ"] )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'label', 'valQ' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn3"]["__uiPosition"].setValue( imath.V2f( -28.0905571, -19.4320335 ) )
Gaffer.Metadata.registerValue( __children["valQ"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["valQ"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["valQ"], 'description', 'Quantize value into a number of discrete steps. 0 == no quantization.' )
Gaffer.Metadata.registerValue( __children["valQ"], 'label', 'val quantization' )
Gaffer.Metadata.registerValue( __children["valQ"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["valQ"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["valQ"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["valQ"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["valQ"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["valQ"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["valQ"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["valQ"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["valQ"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["valQ"], 'layout:index', 3 )
__children["BoxIn4"]["name"].setValue( 'satQ' )
__children["BoxIn4"]["__in"].setInput( __children["satQ"] )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'label', 'satQ' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn4"]["__uiPosition"].setValue( imath.V2f( -28.1115532, -20.6320343 ) )
Gaffer.Metadata.registerValue( __children["satQ"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["satQ"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["satQ"], 'description', 'Quantize saturation into a number of discrete steps. 0 == no quantization.' )
Gaffer.Metadata.registerValue( __children["satQ"], 'label', 'sat quantization' )
Gaffer.Metadata.registerValue( __children["satQ"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["satQ"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["satQ"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["satQ"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["satQ"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["satQ"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["satQ"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["satQ"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["satQ"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["satQ"], 'layout:index', 4 )
__children["BoxIn5"]["name"].setValue( 'valM' )
__children["BoxIn5"]["__in"].setInput( __children["valM"] )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'label', 'valM' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn5"]["__uiPosition"].setValue( imath.V2f( -31.6193638, -21.8320332 ) )
Gaffer.Metadata.registerValue( __children["valM"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["valM"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["valM"], 'description', 'multiply the value by this amount.' )
Gaffer.Metadata.registerValue( __children["valM"], 'label', 'value multiply' )
Gaffer.Metadata.registerValue( __children["valM"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["valM"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["valM"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["valM"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["valM"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["valM"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["valM"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["valM"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["valM"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["valM"], 'layout:index', 5 )
__children["Expression"]["__engine"].setValue( 'OSL' )
__children["Expression"]["__expression"].setValue( 'int xSize = parent.__in.p0;\nparent.__out.p0 = xSize;\nint ySize = parent.__in.p1;\nif (ySize == 0) ySize = xSize;\nparent.__out.p1 = ySize;' )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'description', 'Generate a UV Map of the incoming image.' )


del __children

