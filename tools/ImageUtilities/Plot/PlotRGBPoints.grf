import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["ImageToPoints"] = GafferScene.ImageToPoints( "ImageToPoints" )
parent.addChild( __children["ImageToPoints"] )
__children["ImageToPoints"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["image"] = GafferImage.ImagePlug( "image", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["image"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["ShuffleLayer3"] = Gaffer.Reference( "ShuffleLayer3" )
parent.addChild( __children["ShuffleLayer3"] )
__children["ShuffleLayer3"].load( "ShuffleLayer.grf" )
__children["ShuffleLayer3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform"] = GafferScene.Transform( "Transform" )
parent.addChild( __children["Transform"] )
__children["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.BoolPlug( "p0", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.BoolPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["achromaticUp"] = Gaffer.BoolPlug( "achromaticUp", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["achromaticUp"] )
__children["Parent"] = GafferScene.Parent( "Parent" )
parent.addChild( __children["Parent"] )
__children["Parent"]["children"].addChild( GafferScene.ScenePlug( "child1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Parent"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageToPoints1"] = GafferScene.ImageToPoints( "ImageToPoints1" )
parent.addChild( __children["ImageToPoints1"] )
__children["ImageToPoints1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "steps", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "mode", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "scale", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn3"] = Gaffer.BoxIn( "BoxIn3" )
parent.addChild( __children["BoxIn3"] )
__children["BoxIn3"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["BoxIn3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["mode"] = Gaffer.IntPlug( "mode", defaultValue = 2, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["mode"] )
__children["BoxIn4"] = Gaffer.BoxIn( "BoxIn4" )
parent.addChild( __children["BoxIn4"] )
__children["BoxIn4"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["BoxIn4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["steps"] = Gaffer.IntPlug( "steps", defaultValue = 6, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["steps"] )
__children["BoxIn5"] = Gaffer.BoxIn( "BoxIn5" )
parent.addChild( __children["BoxIn5"] )
__children["BoxIn5"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn5"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["scale"] = Gaffer.FloatPlug( "scale", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["scale"] )
__children["ImageToPoints"]["enabled"].setInput( __children["enabled"] )
__children["ImageToPoints"]["image"].setInput( __children["ShuffleLayer3"]["out"] )
__children["ImageToPoints"]["position"].setValue( IECore.StringVectorData( [ 'pos.R', 'pos.G', 'pos.B', 'pos.A' ] ) )
__children["ImageToPoints"]["primitiveVariables"].setValue( '*' )
__children["ImageToPoints"]["__uiPosition"].setValue( imath.V2f( 0.150000572, 11.3588352 ) )
__children["BoxIn"]["name"].setValue( 'image' )
__children["BoxIn"]["__in"].setInput( __children["image"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The image to be converted into a points primitive.' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 0.149999857, 35.4242134 ) )
Gaffer.Metadata.registerValue( __children["image"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["image"], 'description', 'The image to be converted into a points primitive.' )
Gaffer.Metadata.registerValue( __children["image"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["image"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["image"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["image"], 'divider', False )
__children["BoxOut"]["in"].setInput( __children["Transform"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The output scene.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 3.9000001, -15.3320332 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The output scene.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["out"], 'divider', False )
Gaffer.Metadata.registerValue( __children["ShuffleLayer3"], 'description', 'Shuffle RGBA into specified layer name.' )
Gaffer.Metadata.registerValue( __children["ShuffleLayer3"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["ShuffleLayer3"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["ShuffleLayer3"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["ShuffleLayer3"], 'noduleLayout:customGadget:addButtonRight:visible', False )
__children["ShuffleLayer3"]["in"].setInput( __children["BoxIn"]["out"] )
__children["ShuffleLayer3"]["outLayer"].setValue( 'pos' )
__children["ShuffleLayer3"]["__uiPosition"].setValue( imath.V2f( 0.149999857, 21.7148781 ) )
Gaffer.MetadataAlgo.setNumericBookmark( __children["Transform"].scriptNode(), 3, __children["Transform"] )
__children["Transform"]["enabled"].setInput( __children["Expression"]["__out"]["p1"] )
__children["Transform"]["in"].setInput( __children["Parent"]["out"] )
__children["Transform"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Transform"]["space"].setValue( 2 )
__children["Transform"]["transform"]["rotate"]["x"].setValue( -45.0 )
__children["Transform"]["transform"]["rotate"]["z"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Transform"]["__uiPosition"].setValue( imath.V2f( 2.4000001, -8.06406593 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/*' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 16.2887135, -3.91899252 ) )
__children["Expression"]["__in"]["p0"].setInput( __children["achromaticUp"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 6.79994726, -7.12731266 ) )
Gaffer.Metadata.registerValue( __children["achromaticUp"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["achromaticUp"], 'layout:section', 'Settings.Cube Options' )
Gaffer.Metadata.registerValue( __children["achromaticUp"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["achromaticUp"], 'label', 'achromatic up' )
Gaffer.Metadata.registerValue( __children["achromaticUp"], 'description', 'Orient the points so that achromatic is +Y' )
__children["Parent"]["in"].setInput( __children["ImageToPoints"]["out"] )
__children["Parent"]["parent"].setValue( '/' )
__children["Parent"]["children"][0].setInput( __children["ImageToPoints1"]["out"] )
__children["Parent"]["__uiPosition"].setValue( imath.V2f( 2.4000001, 0.0999963284 ) )
__children["ImageToPoints1"]["name"].setValue( 'displayCube' )
__children["ImageToPoints1"]["transform"]["scale"]["y"].setInput( __children["ImageToPoints1"]["transform"]["scale"]["x"] )
__children["ImageToPoints1"]["transform"]["scale"]["z"].setInput( __children["ImageToPoints1"]["transform"]["scale"]["x"] )
__children["ImageToPoints1"]["image"].setInput( __children["OSLImage"]["out"] )
__children["ImageToPoints1"]["position"].setValue( IECore.StringVectorData( [ 'R', 'G', 'B', 'A' ] ) )
__children["ImageToPoints1"]["primitiveVariables"].setValue( '[RGBA]' )
__children["ImageToPoints1"]["width"].setValue( 0.05000000074505806 )
__children["ImageToPoints1"]["widthChannel"].setValue( 'A' )
__children["ImageToPoints1"]["__uiPosition"].setValue( imath.V2f( 58.8429031, 8.26405907 ) )
Gaffer.MetadataAlgo.setNumericBookmark( __children["OSLImage"].scriptNode(), 1, __children["OSLImage"] )
__children["OSLImage"]["defaultFormat"].setValue( GafferImage.Format( 1024, 1024, 1.000 ) )
Gaffer.Metadata.registerValue( __children["OSLImage"]["defaultFormat"], 'formatPlugValueWidget:mode', 'custom' )
__children["OSLImage"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["out"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( 58.8429031, 19.236824 ) )
__children["OSLCode"]["parameters"]["steps"].setInput( __children["BoxIn4"]["out"] )
__children["OSLCode"]["parameters"]["mode"].setInput( __children["BoxIn3"]["out"] )
__children["OSLCode"]["parameters"]["scale"].setInput( __children["BoxIn5"]["out"] )
__children["OSLCode"]["code"].setValue( 'float quantize(float x, float steps) { return round(x*steps+0.5001)/steps; }\ncolor hr;\n// Full cube\nif (mode == 0) {\n\thr = color("hsv", fabs(v-0.5)*2, 1, u);\n}\n// Quantized Cube\nif (mode == 1) {\n\thr = color("hsv", fabs(v-0.5)*2, 1, u);\n\thr = steps>0?round(hr*steps)/steps:hr;\n}\n\n// Primaries and Secondaries Lines\nif (mode == 2) {\n\thr = color("hsv", quantize(fabs(v-0.5)*2,steps>0?round(steps/2)*2:6), 1, u);\n}\n\nhr = ((v-0.5) > 0) ? hr : 1-hr;\nhr *= scale;\nout = hr;' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( 45.3807449, 19.8368225 ) )
Gaffer.Metadata.registerValue( __children["enabled"], 'description', 'Enable or disable plotting of the input image data.' )
Gaffer.Metadata.registerValue( __children["enabled"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["enabled"], 'divider', True )
Gaffer.Metadata.registerValue( __children["Backdrop"], 'nodeGadget:color', imath.Color3f( 0.270000011, 0.270000011, 0.270000011 ) )
__children["Backdrop"]["title"].setValue( 'RGB Cube' )
__children["Backdrop"]["description"].setValue( 'Generate image data representing a 0-1 cube, visualizing the display-referred gamut cube, then plot this image data as points for visualization purposes.' )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( 45.2368431, 14.4344254 ) )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -22.5071831, -13.8732986 ), imath.V2f( 27.683506, 20.1767197 ) ) )
__children["BoxIn3"]["name"].setValue( 'mode' )
__children["BoxIn3"]["__in"].setInput( __children["mode"] )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'label', 'mode' )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn3"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn3"]["__uiPosition"].setValue( imath.V2f( 33.4835281, 19.836813 ) )
Gaffer.Metadata.registerValue( __children["mode"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["mode"], 'description', 'Choose the display mode for the display-referred gamut cube.' )
Gaffer.Metadata.registerValue( __children["mode"], 'label', 'cube mode' )
Gaffer.Metadata.registerValue( __children["mode"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["mode"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["mode"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["mode"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["mode"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["mode"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["mode"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["mode"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["mode"], 'layout:section', 'Settings.Cube Options' )
Gaffer.Metadata.registerValue( __children["mode"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["mode"], 'preset:Full Cube', 0 )
Gaffer.Metadata.registerValue( __children["mode"], 'preset:Quantized Cube', 1 )
Gaffer.Metadata.registerValue( __children["mode"], 'preset:Lines', 2 )
__children["BoxIn4"]["name"].setValue( 'steps' )
__children["BoxIn4"]["__in"].setInput( __children["steps"] )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'label', 'steps' )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn4"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn4"]["__uiPosition"].setValue( imath.V2f( 33.4975967, 26.336813 ) )
Gaffer.Metadata.registerValue( __children["steps"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["steps"], 'description', 'Choose the number of quantization steps for the relevant cube display mode.' )
Gaffer.Metadata.registerValue( __children["steps"], 'label', 'steps' )
Gaffer.Metadata.registerValue( __children["steps"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["steps"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["steps"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["steps"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["steps"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["steps"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["steps"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["steps"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["steps"], 'layout:section', 'Settings.Cube Options' )
Gaffer.Metadata.registerValue( __children["steps"], 'layout:index', 5 )
__children["BoxIn5"]["name"].setValue( 'scale' )
__children["BoxIn5"]["__in"].setInput( __children["scale"] )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'label', 'scale' )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn5"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn5"]["__uiPosition"].setValue( imath.V2f( 33.586731, 13.3368139 ) )
Gaffer.Metadata.registerValue( __children["scale"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["scale"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["scale"], 'description', 'The Scale of the display-referred gamut cube. Defaults to 1.0' )
Gaffer.Metadata.registerValue( __children["scale"], 'label', 'scale' )
Gaffer.Metadata.registerValue( __children["scale"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["scale"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["scale"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["scale"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["scale"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["scale"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["scale"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["scale"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["scale"], 'layout:section', 'Settings.Cube Options' )
Gaffer.Metadata.registerValue( __children["scale"], 'layout:index', 6 )
__children["Expression"]["__engine"].setValue( 'OSL' )
__children["Expression"]["__expression"].setValue( 'parent.__out.p0 = degrees(atan(sqrt(0.5)));\nparent.__out.p1 = parent.__in.p0;' )
Gaffer.Metadata.registerValue( parent, 'description', 'Plot the input RGB pixel values as 3d points. Optionally, adds a 1x1 cube for visualizing the display-referred gamut cube.\n' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.MetadataAlgo.setNumericBookmark( parent.scriptNode(), 5, parent )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'layout:section:Settings.Cube Options:summary', 'test' )


del __children

