import Gaffer
import GafferOSL
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["ColorMatrix"] = GafferOSL.OSLCode( "ColorMatrix" )
parent.addChild( __children["ColorMatrix"] )
__children["ColorMatrix"]["parameters"].addChild( Gaffer.V3fPlug( "m0", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["ColorMatrix"]["parameters"].addChild( Gaffer.V3fPlug( "m1", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["ColorMatrix"]["parameters"].addChild( Gaffer.V3fPlug( "m2", defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["ColorMatrix"]["parameters"].addChild( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ColorMatrix"]["out"].addChild( Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ColorMatrix"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"] = Gaffer.Expression( "Expression4" )
parent.addChild( __children["Expression4"] )
__children["Expression4"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = 'XYZ', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"]["__in"].addChild( Gaffer.StringPlug( "p1", defaultValue = 'XYZ', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"]["__out"].addChild( Gaffer.V3fPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["Expression4"]["__out"].addChild( Gaffer.V3fPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["Expression4"]["__out"].addChild( Gaffer.V3fPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, interpretation = IECore.GeometricData.Interpretation.Vector ) )
__children["Expression4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( Gaffer.Color3fPlug( "out", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["gamutIn"] = Gaffer.StringPlug( "gamutIn", defaultValue = 'XYZ', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["gamutIn"] )
__children["gamutOut"] = Gaffer.StringPlug( "gamutOut", defaultValue = 'XYZ', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["gamutOut"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
Gaffer.Metadata.registerValue( __children["ColorMatrix"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["ColorMatrix"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["ColorMatrix"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["ColorMatrix"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["ColorMatrix"]["parameters"]["m0"].setInput( __children["Expression4"]["__out"]["p0"] )
__children["ColorMatrix"]["parameters"]["m1"].setInput( __children["Expression4"]["__out"]["p1"] )
__children["ColorMatrix"]["parameters"]["m2"].setInput( __children["Expression4"]["__out"]["p2"] )
__children["ColorMatrix"]["parameters"]["in"].setInput( __children["BoxIn"]["out"] )
__children["ColorMatrix"]["code"].setValue( 'out.r = dot(m0, in);\nout.g = dot(m1, in);\nout.b = dot(m2, in);' )
__children["ColorMatrix"]["__uiPosition"].setValue( imath.V2f( -593.35083, 5.33377171 ) )
__children["Expression4"]["__in"]["p0"].setInput( __children["gamutIn"] )
__children["Expression4"]["__in"]["p1"].setInput( __children["gamutOut"] )
__children["Expression4"]["__uiPosition"].setValue( imath.V2f( -600.471619, 12.8735418 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'label', 'c' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["r"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["r"], 'noduleLayout:label', 'c.r' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["g"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["g"], 'noduleLayout:label', 'c.g' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["b"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["b"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["b"], 'noduleLayout:label', 'c.b' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -608.49762, 9.83449078 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["in"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["in"]["r"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["in"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["in"]["r"], 'noduleLayout:label', 'c.r' )
Gaffer.Metadata.registerValue( __children["in"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["in"]["g"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["in"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["in"]["g"], 'noduleLayout:label', 'c.g' )
Gaffer.Metadata.registerValue( __children["in"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["in"]["b"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["in"]["b"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["in"]["b"], 'noduleLayout:label', 'c.b' )
__children["BoxOut"]["in"].setInput( __children["ColorMatrix"]["out"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'label', 'out' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["BoxOut"]["passThrough"].setInput( __children["BoxIn"]["out"] )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -581.270325, 5.33377171 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["out"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["out"], 'label', 'out' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["out"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["out"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["out"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'description', '' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:XYZ', 'XYZ' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:ACES', 'ACES' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:ACEScg', 'ACEScg' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:FilmlightEGamut', 'FilmlightEGamut' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:DavinciWideGamut', 'DavinciWideGamut' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:Rec709', 'Rec709' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:Rec2020', 'Rec2020' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:P3D65', 'P3D65' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:ArriWideGamut3', 'ArriWideGamut3' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:ArriWideGamut4', 'ArriWideGamut4' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:RedWideGamutRGB', 'ArriWideGamut4' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:SonySGamut3', 'SonySGamut3' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:SonySGamut3.Cine', 'SonySGamut3.Cine' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:PanasonicVGamut', 'PanasonicVGamut' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:DJIDGamut', 'DJIDGamut' )
Gaffer.Metadata.registerValue( __children["gamutIn"], 'preset:BlackmagicWideGamut', 'BlackmagicWideGamut' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'plugValueWidget:type', 'GafferUI.PresetsPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:XYZ', 'XYZ' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:ACES', 'ACES' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:ACEScg', 'ACEScg' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:FilmlightEGamut', 'FilmlightEGamut' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:DavinciWideGamut', 'DavinciWideGamut' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:Rec709', 'Rec709' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:Rec2020', 'Rec2020' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:P3D65', 'P3D65' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:ArriWideGamut3', 'ArriWideGamut3' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:ArriWideGamut4', 'ArriWideGamut4' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:RedWideGamutRGB', 'ArriWideGamut4' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:SonySGamut3', 'SonySGamut3' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:SonySGamut3.Cine', 'SonySGamut3.Cine' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:PanasonicVGamut', 'PanasonicVGamut' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:DJIDGamut', 'DJIDGamut' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'preset:BlackmagicWideGamut', 'BlackmagicWideGamut' )
Gaffer.Metadata.registerValue( __children["gamutOut"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 4 )
__children["Expression4"]["__engine"].setValue( 'python' )
__children["Expression4"]["__expression"].setValue( 'import imath\n\n# M33f describing conversion from gamut to XYZ D65 (CAT02)\ngamuts = {\n\t\'ACES\': imath.M33f(0.93863094875027, -0.00574192055037, 0.01756689885177, 0.33809359492202, 0.72721390281144, -0.06530749773346, 0.00072312151134, 0.00081844184924, 1.0875161873993),\n\t\'ACEScg\': imath.M33f(0.65241871767191, 0.12717992553754, 0.17085728384222, 0.26806405919427, 0.67246447899262, 0.05947146181311, -0.0054699285105, 0.00518279997698, 1.0893448792934),\n\t\'FilmlightEGamut\': imath.M33f(0.70539685008777, 0.16404132830992, 0.08101774865398, 0.28013072409111, 0.8202066415496, -0.1003373656407, -0.10378151156916, -0.07290725702663, 1.2657465193557),\n\t\'DavinciWideGamut\': imath.M33f(0.70062239209367, 0.1487748151232, 0.1010587198348, 0.27411851090665, 0.87363189594044, -0.14775040684709, -0.09896291288323, -0.13789532507554, 1.3259159887187),\n\t\'Rec709\': imath.M33f(0.41239079926596, 0.35758433938388, 0.18048078840183, 0.21263900587151, 0.71516867876776, 0.07219231536073, 0.01933081871559, 0.11919477979463, 0.95053215224966),\n\t\'Rec2020\': imath.M33f(0.63695804830129, 0.14461690358621, 0.16888097516417, 0.26270021201127, 0.67799807151887, 0.05930171646986, 0, 0.02807269304909, 1.0609850577108),\n\t\'P3D65\': imath.M33f(0.48657094864822, 0.26566769316909, 0.19821728523436, 0.22897456406975, 0.69173852183651, 0.07928691409374, -0, 0.0451133818589, 1.043944368901),\n\t\'ArriWideGamut3\': imath.M33f(0.63800761928373, 0.2147038563371, 0.09774445143084, 0.29195377899972, 0.82384104151069, -0.11579482051041, 0.00279827903195, -0.06703423568896, 1.1532937074169),\n\t\'ArriWideGamut4\': imath.M33f(0.70485832040723, 0.12976029517046, 0.11583731147398, 0.25452417640403, 0.781477732712, -0.03600190911603, 0, 0, 1.0890577507599),\n\t\'RedWideGamutRGB\': imath.M33f(0.73527524590586, 0.06860941061396, 0.14657127053185, 0.28669409949993, 0.84297913401698, -0.12967323351691, -0.07968085687837, -0.34734321699443, 1.5160818246327),\n\t\'SonySGamut3\': imath.M33f(0.70648271319232, 0.12880104979056, 0.1151721640688, 0.27097967081349, 0.78660641122091, -0.0575860820344, -0.0096778453862, 0.00460003749252, 1.0941355586535),\n\t\'SonySGamut3.Cine\': imath.M33f(0.59908392075833, 0.24892551611542, 0.10244649017792, 0.21507582011559, 0.88506850174373, -0.10014432185932, -0.03206584954451, -0.02765839067949, 1.1487819909839),\n\t\'PanasonicVGamut\': imath.M33f(0.67964446987847, 0.15221141243975, 0.11860004473344, 0.26068555009037, 0.77489446332966, -0.03558001342003, -0.00931019821751, -0.00461246704363, 1.102980416021),\n\t\'DJIDGamut\': imath.M33f(0.64817196863381, 0.19405814982076, 0.1082258085971, 0.28300466236124, 0.81319605639174, -0.09620071875298, -0.01825836531363, -0.08316777849461, 1.1904838945681),\n\t\'BlackmagicWideGamut\': imath.M33f(0.60653836828278, 0.22041273532927, 0.12350482343962, 0.26799294005674, 0.83274840912338, -0.10074134918012, -0.02944255416011, -0.08661243027726, 1.2051127351972),\n}\n\n# input gamut\nmi = gamuts.get(parent["__in"]["p0"], imath.M33f())\n\n# output gamut\nmo = gamuts.get(parent["__in"]["p1"], imath.M33f())\n\nm = mo.invert() * mi\n\nparent["__out"]["p0"] = imath.V3f(m[0][0], m[0][1], m[0][2])\nparent["__out"]["p1"] = imath.V3f(m[1][0], m[1][1], m[1][2])\nparent["__out"]["p2"] = imath.V3f(m[2][0], m[2][1], m[2][2])' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'description', '' )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )


del __children

