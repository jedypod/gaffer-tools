import Gaffer
import GafferOSL
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["code"] = GafferOSL.OSLCode( "code" )
parent.addChild( __children["code"] )
__children["code"]["parameters"].addChild( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["code"]["parameters"].addChild( Gaffer.Color3fPlug( "slope", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["code"]["parameters"].addChild( Gaffer.Color3fPlug( "offset", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["code"]["parameters"].addChild( Gaffer.Color3fPlug( "power", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["code"]["parameters"].addChild( Gaffer.FloatPlug( "saturation", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["code"]["parameters"].addChild( Gaffer.IntPlug( "invert", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["code"]["parameters"].addChild( Gaffer.FloatPlug( "mask", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["code"]["out"].addChild( Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["code"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["slope"] = Gaffer.Color3fPlug( "slope", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["slope"] )
__children["offset"] = Gaffer.Color3fPlug( "offset", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["offset"] )
__children["power"] = Gaffer.Color3fPlug( "power", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["power"] )
__children["saturation"] = Gaffer.FloatPlug( "saturation", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["saturation"] )
__children["invert"] = Gaffer.BoolPlug( "invert", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["invert"] )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( Gaffer.Color3fPlug( "out", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( Gaffer.Color3fPlug( "in", defaultValue = imath.Color3f( 0, 0, 0 ), ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["mix"] = Gaffer.FloatPlug( "mix", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["mix"] )
Gaffer.Metadata.registerValue( __children["code"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["code"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["code"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["code"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["code"]["parameters"]["in"].setInput( __children["BoxIn"]["out"] )
__children["code"]["parameters"]["slope"].setInput( __children["slope"] )
__children["code"]["parameters"]["offset"].setInput( __children["offset"] )
__children["code"]["parameters"]["power"].setInput( __children["power"] )
__children["code"]["parameters"]["saturation"].setInput( __children["saturation"] )
__children["code"]["parameters"]["invert"].setInput( __children["invert"] )
__children["code"]["parameters"]["mask"].setInput( __children["mix"] )
__children["code"]["code"].setValue( 'float spow(float x, float p) { return x < 0.0 ? x : pow(x, p); }\ncolor spowc(color x, color p) { return color(spow(x.r, p.r), spow(x.g, p.g), spow(x.b, p.b)); }\n\nfloat lm;\nif (invert) {\n\tlm = 0.2126*in.r + 0.7152*in.g + 0.0722*in.b;\n\tout = (lm*(saturation-1)+in)/saturation;\n\tout = spowc(out, 1/power);\n\tout = (out - offset)/slope;\n} else {\n\tout = in*slope + offset;\n\tout = spowc(out, power);\n\tlm = 0.2126*out.r + 0.7152*out.g + 0.0722*out.b;\n\tout = lm*(1-saturation) + out*saturation;\n}\nout = mix(in, out, mask);' )
__children["code"]["__uiPosition"].setValue( imath.V2f( -11.2912607, 6.30000114 ) )
Gaffer.Metadata.registerValue( __children["slope"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["slope"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["slope"], 'label', 'slope' )
Gaffer.Metadata.registerValue( __children["offset"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["offset"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["offset"], 'label', 'offset' )
Gaffer.Metadata.registerValue( __children["power"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["power"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["power"], 'label', 'power' )
Gaffer.Metadata.registerValue( __children["saturation"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["saturation"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["saturation"], 'label', 'saturation' )
Gaffer.Metadata.registerValue( __children["invert"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["invert"], 'label', 'invert' )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'label', 'in' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["r"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["r"], 'noduleLayout:label', 'in.r' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["g"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["g"], 'noduleLayout:label', 'in.g' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["b"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["b"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"]["b"], 'noduleLayout:label', 'in.b' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -21.9090328, 11.1679688 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["in"], 'label', 'in' )
Gaffer.Metadata.registerValue( __children["in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["in"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["in"]["r"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["in"]["r"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["in"]["r"], 'noduleLayout:label', 'in.r' )
Gaffer.Metadata.registerValue( __children["in"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["in"]["g"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["in"]["g"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["in"]["g"], 'noduleLayout:label', 'in.g' )
Gaffer.Metadata.registerValue( __children["in"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["in"]["b"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["in"]["b"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["in"]["b"], 'noduleLayout:label', 'in.b' )
__children["BoxOut"]["in"].setInput( __children["code"]["out"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'label', 'out' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["BoxOut"]["passThrough"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -3.20903254, 2.66796875 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:color', imath.Color3f( 0.689999998, 0.537800014, 0.228300005 ) )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["out"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["out"], 'label', 'out' )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["out"]["r"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["out"]["g"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["out"]["b"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["mix"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["mix"], 'label', 'mix' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'documentation:url', '' )
Gaffer.Metadata.registerValue( parent, 'description', '' )


del __children

