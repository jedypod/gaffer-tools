import Gaffer
import GafferImage
import GafferOSL
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "line", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "th", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["parameters"].addChild( Gaffer.IntPlug( "aa", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"] = Gaffer.Expression( "Expression1" )
parent.addChild( __children["Expression1"] )
__children["Expression1"]["__in"].addChild( Gaffer.AtomicBox2iPlug( "p0", defaultValue = imath.Box2i(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"]["__in"].addChild( GafferImage.AtomicFormatPlug( "p1", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"]["__in"].addChild( Gaffer.IntPlug( "p2", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"]["__out"].addChild( Gaffer.Box2iPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box2i(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"]["__out"].addChild( Gaffer.FloatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"]["__out"].addChild( Gaffer.Box2iPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box2i(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["scanline"] = Gaffer.IntPlug( "scanline", defaultValue = 256, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["scanline"] )
__children["Crop"] = GafferImage.Crop( "Crop" )
parent.addChild( __children["Crop"] )
__children["Crop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Resize"] = GafferImage.Resize( "Resize" )
parent.addChild( __children["Resize"] )
__children["Resize"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Blur"] = GafferImage.Blur( "Blur" )
parent.addChild( __children["Blur"] )
__children["Blur"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"] = Gaffer.Box( "AASetup" )
parent.addChild( __children["AASetup"] )
__children["AASetup"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["AASetup"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["AASetup"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["AASetup"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["AASetup"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( GafferImage.Shuffle( "ShuffleLayer" ) )
__children["AASetup"]["ShuffleLayer"]["user"].addChild( Gaffer.StringPlug( "layer", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( Gaffer.Expression( "Expression2" ) )
__children["AASetup"]["Expression2"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression2"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression2"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression2"]["__out"].addChild( Gaffer.StringPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression2"]["__out"].addChild( Gaffer.StringPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( GafferImage.Offset( "Offset" ) )
__children["AASetup"]["Offset"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( GafferImage.Shuffle( "ShuffleLayer1" ) )
__children["AASetup"]["ShuffleLayer1"]["user"].addChild( Gaffer.StringPlug( "layer", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["ShuffleLayer1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( Gaffer.Expression( "Expression3" ) )
__children["AASetup"]["Expression3"]["__in"].addChild( Gaffer.StringPlug( "p0", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression3"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression3"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression3"]["__out"].addChild( Gaffer.StringPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression3"]["__out"].addChild( Gaffer.StringPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["Expression3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( GafferImage.Offset( "Offset1" ) )
__children["AASetup"]["Offset1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"].addChild( GafferImage.CopyChannels( "CopyChannels" ) )
__children["AASetup"]["CopyChannels"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["CopyChannels"]["in"].addChild( GafferImage.ImagePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AASetup"]["CopyChannels"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn2"] = Gaffer.BoxIn( "BoxIn2" )
parent.addChild( __children["BoxIn2"] )
__children["BoxIn2"].setup( Gaffer.IntPlug( "out", defaultValue = 0, ) )
__children["BoxIn2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.BoolPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["antiAlias"] = Gaffer.IntPlug( "antiAlias", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["antiAlias"] )
__children["OSLImage"]["in"].setInput( __children["AASetup"]["out"] )
__children["OSLImage"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["out"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( -16.6338615, 17.4207439 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 0 )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -16.6338615, 50.1100197 ) )
__children["BoxOut"]["in"].setInput( __children["Blur"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
__children["BoxOut"]["passThrough"].setInput( __children["BoxIn"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -15.1338615, 2.39819336 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 6 )
__children["OSLCode"]["parameters"]["line"].setInput( __children["BoxIn1"]["out"] )
__children["OSLCode"]["parameters"]["th"].setInput( __children["Expression1"]["__out"]["p1"] )
__children["OSLCode"]["parameters"]["aa"].setInput( __children["BoxIn2"]["out"] )
__children["OSLCode"]["code"].setValue( '// Full credit to Daniel Dresser for graciously sharing this technique!\ncolor rgb = inLayer("", 0);\nif (aa == 0) {\n\tout = min(linearstep(rgb - th, rgb, v), 1 - linearstep(rgb, rgb + th, v));\n} else {\n\tcolor L = inLayer("L", 0);\n\tcolor R = inLayer("R", 0);\n\tcolor aa0 = min(min(L,R), rgb-th);\n\tcolor aa1 = max(max(L,R), rgb+th);\n\tout = min(linearstep(aa0, rgb, v), 1 - linearstep(rgb, aa1, v));\n}\n\n' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -27.5960197, 18.0207443 ) )
__children["Expression1"]["__in"]["p0"].setInput( __children["BoxIn"]["out"]["dataWindow"] )
__children["Expression1"]["__in"]["p1"].setInput( __children["BoxIn"]["out"]["format"] )
__children["Expression1"]["__in"]["p2"].setInput( __children["scanline"] )
__children["Expression1"]["__uiPosition"].setValue( imath.V2f( -33.324501, 45.8335152 ) )
__children["BoxIn1"]["name"].setValue( 'scanline' )
__children["BoxIn1"]["__in"].setInput( __children["scanline"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'label', 'line' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -40.2725143, 19.2207451 ) )
Gaffer.Metadata.registerValue( __children["scanline"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["scanline"], 'description', '' )
Gaffer.Metadata.registerValue( __children["scanline"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["scanline"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["scanline"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["scanline"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["scanline"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["scanline"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["scanline"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["scanline"], 'deletable', True )
__children["Crop"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Crop"]["area"].setInput( __children["Expression1"]["__out"]["p0"] )
__children["Crop"]["__uiPosition"].setValue( imath.V2f( -16.6338615, 41.7779884 ) )
__children["Resize"]["in"].setInput( __children["Crop"]["out"] )
__children["Resize"]["format"]["displayWindow"].setInput( __children["Expression1"]["__out"]["p2"] )
__children["Resize"]["fitMode"].setValue( 4 )
__children["Resize"]["__uiPosition"].setValue( imath.V2f( -16.6338615, 36.1139259 ) )
__children["Blur"]["enabled"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Blur"]["in"].setInput( __children["OSLImage"]["out"] )
__children["Blur"]["radius"]["x"].setValue( 2.0 )
__children["Blur"]["radius"]["y"].setInput( __children["Blur"]["radius"]["x"] )
__children["Blur"]["__uiPosition"].setValue( imath.V2f( -16.6338615, 9.25668144 ) )
Gaffer.Metadata.registerValue( __children["AASetup"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["AASetup"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["AASetup"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["AASetup"], 'noduleLayout:customGadget:addButtonRight:visible', False )
__children["AASetup"]["__uiPosition"].setValue( imath.V2f( -16.6338615, 27.7818947 ) )
__children["AASetup"]["BoxIn"]["__in"].setInput( __children["AASetup"]["in"] )
Gaffer.Metadata.registerValue( __children["AASetup"]["BoxIn"]["__in"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["AASetup"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["AASetup"]["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["AASetup"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -4.19273949, 0.126720428 ) )
__children["AASetup"]["in"].setInput( __children["Resize"]["out"] )
Gaffer.Metadata.registerValue( __children["AASetup"]["in"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["AASetup"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["AASetup"]["in"], 'noduleLayout:section', 'top' )
__children["AASetup"]["BoxOut"]["in"].setInput( __children["AASetup"]["CopyChannels"]["out"] )
Gaffer.Metadata.registerValue( __children["AASetup"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["AASetup"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["AASetup"]["BoxOut"]["__out"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["AASetup"]["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["AASetup"]["BoxOut"]["__out"], 'noduleLayout:spacing', 2.0 )
__children["AASetup"]["BoxOut"]["passThrough"].setInput( __children["AASetup"]["BoxIn"]["out"] )
__children["AASetup"]["BoxOut"]["enabled"].setInput( __children["AASetup"]["enabled"] )
__children["AASetup"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -2.69273949, -27.8654671 ) )
__children["AASetup"]["out"].setInput( __children["AASetup"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["AASetup"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["AASetup"]["out"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["AASetup"]["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["AASetup"]["out"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["AASetup"]["out"], 'noduleLayout:section', 'bottom' )
__children["AASetup"]["ShuffleLayer"]["user"]["layer"].setValue( 'L' )
Gaffer.Metadata.registerValue( __children["AASetup"]["ShuffleLayer"]["user"]["layer"], 'nodule:type', '' )
__children["AASetup"]["ShuffleLayer"]["in"].setInput( __children["AASetup"]["Offset"]["out"] )
__children["AASetup"]["ShuffleLayer"]["channels"]["channel"]["in"].setValue( 'R' )
__children["AASetup"]["ShuffleLayer"]["channels"]["channel1"]["in"].setValue( 'G' )
__children["AASetup"]["ShuffleLayer"]["channels"]["channel2"]["in"].setValue( 'B' )
__children["AASetup"]["ShuffleLayer"]["channels"]["channel3"]["in"].setValue( 'A' )
__children["AASetup"]["ShuffleLayer"]["channels"]["channel"]["out"].setInput( __children["AASetup"]["Expression2"]["__out"]["p0"] )
__children["AASetup"]["ShuffleLayer"]["channels"]["channel1"]["out"].setInput( __children["AASetup"]["Expression2"]["__out"]["p1"] )
__children["AASetup"]["ShuffleLayer"]["channels"]["channel2"]["out"].setInput( __children["AASetup"]["Expression2"]["__out"]["p2"] )
__children["AASetup"]["ShuffleLayer"]["channels"]["channel3"]["out"].setInput( __children["AASetup"]["Expression2"]["__out"]["p3"] )
__children["AASetup"]["ShuffleLayer"]["__uiPosition"].setValue( imath.V2f( -32.7905426, -13.9960928 ) )
__children["AASetup"]["Expression2"]["__in"]["p0"].setInput( __children["AASetup"]["ShuffleLayer"]["user"]["layer"] )
__children["AASetup"]["Expression2"]["__uiPosition"].setValue( imath.V2f( -27.9889202, -12.710289 ) )
__children["AASetup"]["Offset"]["in"].setInput( __children["AASetup"]["BoxIn"]["out"] )
__children["AASetup"]["Offset"]["offset"].setValue( imath.V2i( -1, 0 ) )
__children["AASetup"]["Offset"]["__uiPosition"].setValue( imath.V2f( -32.7905426, -8.33203125 ) )
__children["AASetup"]["ShuffleLayer1"]["user"]["layer"].setValue( 'R' )
Gaffer.Metadata.registerValue( __children["AASetup"]["ShuffleLayer1"]["user"]["layer"], 'nodule:type', '' )
__children["AASetup"]["ShuffleLayer1"]["in"].setInput( __children["AASetup"]["Offset1"]["out"] )
__children["AASetup"]["ShuffleLayer1"]["channels"]["channel"]["in"].setValue( 'R' )
__children["AASetup"]["ShuffleLayer1"]["channels"]["channel1"]["in"].setValue( 'G' )
__children["AASetup"]["ShuffleLayer1"]["channels"]["channel2"]["in"].setValue( 'B' )
__children["AASetup"]["ShuffleLayer1"]["channels"]["channel3"]["in"].setValue( 'A' )
__children["AASetup"]["ShuffleLayer1"]["channels"]["channel"]["out"].setInput( __children["AASetup"]["Expression3"]["__out"]["p0"] )
__children["AASetup"]["ShuffleLayer1"]["channels"]["channel1"]["out"].setInput( __children["AASetup"]["Expression3"]["__out"]["p1"] )
__children["AASetup"]["ShuffleLayer1"]["channels"]["channel2"]["out"].setInput( __children["AASetup"]["Expression3"]["__out"]["p2"] )
__children["AASetup"]["ShuffleLayer1"]["channels"]["channel3"]["out"].setInput( __children["AASetup"]["Expression3"]["__out"]["p3"] )
__children["AASetup"]["ShuffleLayer1"]["__uiPosition"].setValue( imath.V2f( -19.6110821, -13.8693733 ) )
__children["AASetup"]["Expression3"]["__in"]["p0"].setInput( __children["AASetup"]["ShuffleLayer1"]["user"]["layer"] )
__children["AASetup"]["Expression3"]["__uiPosition"].setValue( imath.V2f( -14.8094625, -12.5835686 ) )
__children["AASetup"]["Offset1"]["in"].setInput( __children["AASetup"]["BoxIn"]["out"] )
__children["AASetup"]["Offset1"]["offset"].setValue( imath.V2i( 1, 0 ) )
__children["AASetup"]["Offset1"]["__uiPosition"].setValue( imath.V2f( -19.6110821, -8.20531082 ) )
__children["AASetup"]["CopyChannels"]["in"][0].setInput( __children["AASetup"]["BoxIn"]["out"] )
__children["AASetup"]["CopyChannels"]["in"][1].setInput( __children["AASetup"]["ShuffleLayer1"]["out"] )
__children["AASetup"]["CopyChannels"]["in"][2].setInput( __children["AASetup"]["ShuffleLayer"]["out"] )
__children["AASetup"]["CopyChannels"]["channels"].setValue( 'L.* R.*' )
Gaffer.Metadata.registerValue( __children["AASetup"]["CopyChannels"]["channels"], 'channelMaskPlugValueWidget:custom', True )
__children["AASetup"]["CopyChannels"]["__uiPosition"].setValue( imath.V2f( -4.19273949, -22.0334358 ) )
__children["BoxIn2"]["name"].setValue( 'antiAlias' )
__children["BoxIn2"]["__in"].setInput( __children["antiAlias"] )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'label', 'aa' )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn2"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn2"]["__uiPosition"].setValue( imath.V2f( -40.4207077, 16.8207436 ) )
__children["Expression"]["__in"]["p0"].setInput( __children["antiAlias"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -25.8674202, 9.23438358 ) )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'description', '' )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'plugValueWidget:type', 'GafferUI.BoolPlugValueWidget' )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["antiAlias"], 'deletable', True )
__children["Expression1"]["__engine"].setValue( 'python' )
__children["Expression1"]["__expression"].setValue( 'import imath\n\n# Get input format\ninF = parent["__in"]["p0"]\n\n# Crop to single pixel at scanline\ncropF = imath.Box2i(inF)\ncropF.setMax(imath.V2i(inF.max().x, parent["__in"]["p2"]+1))\ncropF.setMin(imath.V2i(inF.min().x, parent["__in"]["p2"]))\nparent["__out"]["p0"] = cropF\n\n# Resize back to input format\nparent["__out"]["p2"] = inF\n\nf = parent["__in"]["p1"]\nw = f.width()\nh = f.height()\nparent["__out"]["p1"] = 1/h' )
__children["AASetup"]["Expression2"]["__engine"].setValue( 'python' )
__children["AASetup"]["Expression2"]["__expression"].setValue( 'layer = parent["__in"]["p0"]\nparent["__out"]["p0"] = "{}.R".format(layer)\nparent["__out"]["p1"] = "{}.G".format(layer)\nparent["__out"]["p2"] = "{}.B".format(layer)\nparent["__out"]["p3"] = "{}.A".format(layer)' )
__children["AASetup"]["Expression3"]["__engine"].setValue( 'python' )
__children["AASetup"]["Expression3"]["__expression"].setValue( 'layer = parent["__in"]["p0"]\nparent["__out"]["p0"] = "{}.R".format(layer)\nparent["__out"]["p1"] = "{}.G".format(layer)\nparent["__out"]["p2"] = "{}.B".format(layer)\nparent["__out"]["p3"] = "{}.A".format(layer)' )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'parent["__out"]["p0"] = not parent["__in"]["p0"]' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'description', 'Plot x position vs pixel intensity for pixels at specified horizontal scanline.' )
Gaffer.Metadata.registerValue( parent, 'documentation:url', '' )


del __children

