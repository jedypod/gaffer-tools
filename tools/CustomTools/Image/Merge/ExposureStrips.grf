import Gaffer
import GafferImage
import GafferOSL
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["BoxOut1"] = Gaffer.BoxOut( "BoxOut1" )
parent.addChild( __children["BoxOut1"] )
__children["BoxOut1"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["Loop"] = Gaffer.Loop( "Loop" )
parent.addChild( __children["Loop"] )
__children["Loop"].setup( GafferImage.ImagePlug( "in", ) )
__children["Loop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Constant"] = GafferImage.Constant( "Constant" )
parent.addChild( __children["Constant"] )
__children["Constant"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot17"] = Gaffer.Dot( "Dot17" )
parent.addChild( __children["Dot17"] )
__children["Dot17"].setup( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.AcceptsDependencyCycles, ) )
__children["Dot17"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( GafferImage.AtomicFormatPlug( "p0", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.AtomicCompoundDataPlug( "p1", defaultValue = IECore.CompoundData(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.FloatPlug( "p2", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.FloatPlug( "p3", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.FloatPlug( "p4", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p5", defaultValue = 6, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.V2iPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2i( -2147483648, -2147483648 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.V2iPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2i( -2147483648, -2147483648 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.V2iPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2i( 2147483647, 2147483647 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.FloatPlug( "p4", direction = Gaffer.Plug.Direction.Out, defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.IntPlug( "p5", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"] = Gaffer.Expression( "Expression4" )
parent.addChild( __children["Expression4"] )
__children["Expression4"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 10, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["Offset"] = GafferImage.Offset( "Offset" )
parent.addChild( __children["Offset"] )
__children["Offset"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["strips"] = Gaffer.IntPlug( "strips", defaultValue = 7, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["strips"] )
__children["Crop"] = GafferImage.Crop( "Crop" )
parent.addChild( __children["Crop"] )
__children["Crop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ex"] = Gaffer.FloatPlug( "ex", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["ex"] )
__children["pos"] = Gaffer.FloatPlug( "pos", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["pos"] )
__children["exint"] = Gaffer.FloatPlug( "exint", defaultValue = 1.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["exint"] )
__children["Grade"] = GafferImage.Grade( "Grade" )
parent.addChild( __children["Grade"] )
__children["Grade"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Crop1"] = GafferImage.Crop( "Crop1" )
parent.addChild( __children["Crop1"] )
__children["Crop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut1"]["in"].setInput( __children["Crop1"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut1"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut1"]["__out"], 'plugValueWidget:type', '' )
__children["BoxOut1"]["passThrough"].setInput( __children["BoxIn"]["out"] )
__children["BoxOut1"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut1"]["__uiPosition"].setValue( imath.V2f( -44.821003, -11.4843836 ) )
__children["out"].setInput( __children["BoxOut1"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["Loop"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Loop"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["Loop"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["Loop"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["Loop"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["Loop"]["in"].setInput( __children["Constant"]["out"] )
__children["Loop"]["next"].setInput( __children["Merge"]["out"] )
__children["Loop"]["iterations"].setInput( __children["Expression4"]["__out"]["p0"] )
__children["Loop"]["__uiPosition"].setValue( imath.V2f( -46.321003, 2.51171017 ) )
__children["Merge"]["in"][0].setInput( __children["Dot17"]["out"] )
__children["Merge"]["in"][1].setInput( __children["Offset"]["out"] )
__children["Merge"]["operation"].setValue( 8 )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( -44.821003, 10.6757727 ) )
__children["Constant"]["format"]["displayWindow"]["min"].setValue( imath.V2i( 0, 0 ) )
Gaffer.Metadata.registerValue( __children["Constant"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Constant"]["format"]["displayWindow"]["max"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Constant"]["format"]["pixelAspect"].setInput( __children["Expression"]["__out"]["p1"] )
__children["Constant"]["__uiPosition"].setValue( imath.V2f( -59.6024284, 10.6757727 ) )
__children["Dot17"]["in"].setInput( __children["Loop"]["previous"] )
__children["Dot17"]["__uiPosition"].setValue( imath.V2f( -28.0155964, 7.973773 ) )
__children["Expression"]["__in"]["p0"].setInput( __children["BoxIn"]["out"]["format"] )
__children["Expression"]["__in"]["p1"].setInput( __children["BoxIn"]["out"]["metadata"] )
__children["Expression"]["__in"]["p2"].setInput( __children["ex"] )
__children["Expression"]["__in"]["p3"].setInput( __children["exint"] )
__children["Expression"]["__in"]["p4"].setInput( __children["pos"] )
__children["Expression"]["__in"]["p5"].setInput( __children["strips"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -60.7947807, 33.6281815 ) )
__children["Expression4"]["__in"]["p0"].setInput( __children["strips"] )
__children["Expression4"]["__uiPosition"].setValue( imath.V2f( -41.4986076, 3.64738083 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -44.821003, 38.4999924 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 6 )
__children["Offset"]["in"].setInput( __children["Grade"]["out"] )
__children["Offset"]["offset"]["x"].setInput( __children["Expression"]["__out"]["p5"] )
__children["Offset"]["__uiPosition"].setValue( imath.V2f( -44.821003, 18.8398342 ) )
Gaffer.Metadata.registerValue( __children["strips"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["strips"], 'label', 'strips' )
Gaffer.Metadata.registerValue( __children["strips"], 'description', '' )
Gaffer.Metadata.registerValue( __children["strips"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["strips"], 'layout:index', 5 )
__children["Crop"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Crop"]["area"]["min"].setInput( __children["Expression"]["__out"]["p3"] )
__children["Crop"]["area"]["max"].setInput( __children["Expression"]["__out"]["p2"] )
__children["Crop"]["__uiPosition"].setValue( imath.V2f( -44.821003, 30.1679592 ) )
Gaffer.Metadata.registerValue( __children["ex"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["ex"], 'label', 'exposure' )
Gaffer.Metadata.registerValue( __children["ex"], 'description', 'overall exposure' )
Gaffer.Metadata.registerValue( __children["ex"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["ex"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["pos"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["pos"], 'label', 'position' )
Gaffer.Metadata.registerValue( __children["pos"], 'description', 'strip position in the frame' )
Gaffer.Metadata.registerValue( __children["pos"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["pos"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["exint"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["exint"], 'label', 'increment' )
Gaffer.Metadata.registerValue( __children["exint"], 'description', 'exposure increment: how many stops of exposure difference per strip' )
Gaffer.Metadata.registerValue( __children["exint"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["exint"], 'layout:index', 3 )
__children["Grade"]["in"].setInput( __children["Crop"]["out"] )
__children["Grade"]["multiply"]["r"].setInput( __children["Expression"]["__out"]["p4"] )
__children["Grade"]["multiply"]["g"].setInput( __children["Grade"]["multiply"]["r"] )
__children["Grade"]["multiply"]["b"].setInput( __children["Grade"]["multiply"]["r"] )
__children["Grade"]["__uiPosition"].setValue( imath.V2f( -44.821003, 24.5038967 ) )
__children["Crop1"]["in"].setInput( __children["Loop"]["out"] )
__children["Crop1"]["areaSource"].setValue( 3 )
__children["Crop1"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1920, 1080 ) ) )
__children["Crop1"]["format"].setInput( __children["Constant"]["format"] )
__children["Crop1"]["__uiPosition"].setValue( imath.V2f( -47.821003, -3.15235233 ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'import imath\n\nindex = context.get("loop:index", 0)\n\nstrips = parent["__in"]["p5"]\npos = parent["__in"]["p4"]\n\n# input format\ninFmt = parent["__in"]["p0"]\nwidth = inFmt.width()\nheight = inFmt.height()\npar = parent["__in"]["p1"].get("PixelAspectRatio", 1)\n\n# set bg format to input\nparent["__out"]["p0"] = imath.V2i(width, height)\nparent["__out"]["p1"] = par\n\nstripWidth = round(width/strips)\nstripStart = max(0, min(width-stripWidth, width*pos))\nparent["__out"]["p3"] = imath.V2i(stripStart, 0)\nparent["__out"]["p2"] = imath.V2i(stripStart + stripWidth, height)\nparent["__out"]["p5"] = stripWidth*index\n\n# set up exposure\nexInc = (index-strips//2)*parent["__in"]["p3"]\nparent["__out"]["p4"] = pow(2, exInc+parent["__in"]["p2"])\n' )
__children["Expression4"]["__engine"].setValue( 'OSL' )
__children["Expression4"]["__expression"].setValue( 'parent.__out.p0 = parent.__in.p0;' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'description', 'Create a number of strips from the input image, and vary their exposure from left to right. \n\nposition: the horizontal position to take the source strip from the source image.\nincrement: number of stops each strip varies in exposure\nexposure: overall exposure for all strips\nstrips: number of strips to use' )
Gaffer.Metadata.registerValue( parent, 'documentation:url', '' )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )


del __children

