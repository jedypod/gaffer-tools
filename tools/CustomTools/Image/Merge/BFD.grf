import Gaffer
import GafferImage
import GafferOSL
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["BoxOut1"] = Gaffer.BoxOut( "BoxOut1" )
parent.addChild( __children["BoxOut1"] )
__children["BoxOut1"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["Loop"] = Gaffer.Loop( "Loop" )
parent.addChild( __children["Loop"] )
__children["Loop"].setup( GafferImage.ImagePlug( "in", ) )
__children["Loop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Constant"] = GafferImage.Constant( "Constant" )
parent.addChild( __children["Constant"] )
__children["Constant"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot17"] = Gaffer.Dot( "Dot17" )
parent.addChild( __children["Dot17"] )
__children["Dot17"].setup( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.AcceptsDependencyCycles, ) )
__children["Dot17"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( GafferImage.AtomicFormatPlug( "p0", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p2", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p3", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.V2iPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2i( -2147483648, -2147483648 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.IntPlug( "p2", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.V2iPlug( "p3", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.V2i( -2147483648, -2147483648 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Resize"] = GafferImage.Resize( "Resize" )
parent.addChild( __children["Resize"] )
__children["Resize"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"] = Gaffer.Expression( "Expression4" )
parent.addChild( __children["Expression4"] )
__children["Expression4"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 6, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"]["__in"].addChild( Gaffer.IntPlug( "p1", defaultValue = 3, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 10, minValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression4"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["grid"] = Gaffer.V2iPlug( "grid", defaultValue = imath.V2i( 6, 3 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["grid"] )
__children["div"] = Gaffer.FloatPlug( "div", defaultValue = 2.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["div"] )
__children["Offset"] = GafferImage.Offset( "Offset" )
parent.addChild( __children["Offset"] )
__children["Offset"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["index"] = Gaffer.IntPlug( "index", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["index"] )
__children["exprSetParentIDX"] = Gaffer.Expression( "exprSetParentIDX" )
parent.addChild( __children["exprSetParentIDX"] )
__children["exprSetParentIDX"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["exprSetParentIDX"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut1"]["in"].setInput( __children["Loop"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut1"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut1"]["__out"], 'plugValueWidget:type', '' )
__children["BoxOut1"]["passThrough"].setInput( __children["BoxIn"]["out"] )
__children["BoxOut1"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut1"]["__uiPosition"].setValue( imath.V2f( -46.321003, -7.81532097 ) )
__children["out"].setInput( __children["BoxOut1"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Loop"], 'description', '' )
__children["Loop"]["in"].setInput( __children["Constant"]["out"] )
__children["Loop"]["next"].setInput( __children["Merge"]["out"] )
__children["Loop"]["iterations"].setInput( __children["Expression4"]["__out"]["p0"] )
__children["Loop"]["__uiPosition"].setValue( imath.V2f( -46.321003, 2.51171017 ) )
__children["Merge"]["in"][0].setInput( __children["Dot17"]["out"] )
__children["Merge"]["in"][1].setInput( __children["Offset"]["out"] )
__children["Merge"]["operation"].setValue( 8 )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( -44.821003, 10.6757727 ) )
__children["Constant"]["format"]["displayWindow"]["min"].setValue( imath.V2i( 0, 0 ) )
Gaffer.Metadata.registerValue( __children["Constant"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Constant"]["format"]["displayWindow"]["max"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Constant"]["__uiPosition"].setValue( imath.V2f( -56.5862541, 10.6757727 ) )
__children["Dot17"]["in"].setInput( __children["Loop"]["previous"] )
__children["Dot17"]["__uiPosition"].setValue( imath.V2f( -28.0155964, 7.973773 ) )
__children["Expression"]["__in"]["p0"].setInput( __children["BoxIn"]["out"]["format"] )
__children["Expression"]["__in"]["p1"].setInput( __children["div"] )
__children["Expression"]["__in"]["p2"].setInput( __children["grid"]["x"] )
__children["Expression"]["__in"]["p3"].setInput( __children["grid"]["y"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( -56.6817436, 27.6646442 ) )
__children["Resize"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Resize"]["format"]["displayWindow"]["min"].setValue( imath.V2i( 0, 0 ) )
Gaffer.Metadata.registerValue( __children["Resize"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Resize"]["format"]["displayWindow"]["max"].setInput( __children["Expression"]["__out"]["p3"] )
__children["Resize"]["filter"].setValue( 'blackman-harris' )
__children["Resize"]["__uiPosition"].setValue( imath.V2f( -44.821003, 23.5796432 ) )
__children["Expression4"]["__in"]["p0"].setInput( __children["grid"]["x"] )
__children["Expression4"]["__in"]["p1"].setInput( __children["grid"]["y"] )
__children["Expression4"]["__uiPosition"].setValue( imath.V2f( -41.4986076, 3.64738083 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'bottom' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -44.821003, 31.9116745 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["grid"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["grid"], 'label', 'grid' )
Gaffer.Metadata.registerValue( __children["div"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["div"], 'label', 'downres' )
__children["Offset"]["in"].setInput( __children["Resize"]["out"] )
__children["Offset"]["offset"]["x"].setInput( __children["Expression"]["__out"]["p1"] )
__children["Offset"]["offset"]["y"].setInput( __children["Expression"]["__out"]["p2"] )
__children["Offset"]["__uiPosition"].setValue( imath.V2f( -44.8209991, 17.9155807 ) )
__children["index"].setInput( __children["exprSetParentIDX"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["index"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["index"], 'label', 'index' )
Gaffer.Metadata.registerValue( __children["index"], 'description', 'this plug exposes the Loop Index context variable. It will increment for each item in the index, and can be expression linked to control things like frame number, switch input etc etc' )
__children["exprSetParentIDX"]["__uiPosition"].setValue( imath.V2f( -50.9259262, 3.64817715 ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'import imath\n\nindex = context.get("loop:index", 0)\n\n# BFD grid size\ncols = parent["__in"]["p2"]\nrows = parent["__in"]["p3"]\ngrid_ar = cols/rows\n\n# input format\ninFmt = parent["__in"]["p0"]\ninFmt = imath.V2i(inFmt.width(), inFmt.height())\n\n# set format of individual BFD tile\ndiv = parent["__in"]["p1"]\ntileFmt = imath.V2i(round(inFmt.x/div), round(inFmt.y/div))\nparent["__out"]["p3"] = tileFmt\n\n# set BFD Background format based on grid dimensions\noutFmt = imath.V2i(tileFmt.x*cols, tileFmt.y*rows)\nparent["__out"]["p0"] = outFmt\n\n# set up translate for each tile. start from upper left.\nrow = index // cols\ncol = index % cols\nparent["__out"]["p1"] = tileFmt.x*col\nparent["__out"]["p2"] = tileFmt.y*(rows-1)-tileFmt.y*row\n\n\n' )
__children["Expression4"]["__engine"].setValue( 'OSL' )
__children["Expression4"]["__expression"].setValue( '// parent.__out.p0 = pow(0,2);\nparent.__out.p0 = parent.__in.p0*parent.__in.p1;' )
__children["exprSetParentIDX"]["__engine"].setValue( 'python' )
__children["exprSetParentIDX"]["__expression"].setValue( '# Set iteration index on parent for easy access\nindex = context.get("loop:index", 0)\nparent["__out"]["p0"] = index' )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'description', 'Creates a contact sheet or "Big Fucking Deal" of all items in a grid, controlled by the loop:index context variable (exposed as the index plug). This index plug can be expression linked to control iteration over the input.' )


del __children

