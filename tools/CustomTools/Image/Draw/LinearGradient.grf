import Gaffer
import GafferImage
import GafferOSL
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 3, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"]["channels"].addChild( Gaffer.NameValuePlug( "", Gaffer.Color3fPlug( "value", defaultValue = imath.Color3f( 1, 1, 1 ), ), True, "channel", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["format"] = Gaffer.V2iPlug( "format", defaultValue = imath.V2i( 2048, 1024 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["format"] )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p0", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__in"].addChild( Gaffer.IntPlug( "p1", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.IntPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = -2147483648, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.IntPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = -2147483648, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"] = GafferOSL.OSLCode( "OSLCode" )
parent.addChild( __children["OSLCode"] )
__children["OSLCode"]["parameters"].addChild( Gaffer.FloatPlug( "exposure", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"]["out"].addChild( Gaffer.Color3fPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["OSLCode"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( Gaffer.FloatPlug( "out", defaultValue = 0.0, ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["exposure"] = Gaffer.FloatPlug( "exposure", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["exposure"] )
__children["BoxOut"]["in"].setInput( __children["OSLImage"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["passThrough"], 'noduleLayout:section', 'top' )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -1.49999988, -28.83218 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["out"], 'noduleLayout:section', 'bottom' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 0 )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 8 )
Gaffer.Metadata.registerValue( __children["OSLImage"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["OSLImage"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["OSLImage"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["OSLImage"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["OSLImage"]["defaultFormat"]["displayWindow"]["min"].setValue( imath.V2i( 0, 0 ) )
Gaffer.Metadata.registerValue( __children["OSLImage"]["defaultFormat"], 'formatPlugValueWidget:mode', 'custom' )
__children["OSLImage"]["defaultFormat"]["displayWindow"]["max"].setInput( __children["Expression"]["__out"] )
__children["OSLImage"]["channels"]["channel"]["value"].setInput( __children["OSLCode"]["out"]["out"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( -3, -20.5001488 ) )
Gaffer.Metadata.registerValue( __children["format"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["format"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["format"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["format"], 'description', 'Specify the size of the output. Height = 0 means square.' )
Gaffer.Metadata.registerValue( __children["format"], 'label', 'format' )
__children["Expression"]["__in"]["p0"].setInput( __children["format"]["x"] )
__children["Expression"]["__in"]["p1"].setInput( __children["format"]["y"] )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 1.62688255, -19.4848537 ) )
Gaffer.Metadata.registerValue( __children["OSLCode"], 'noduleLayout:customGadget:addButtonTop:visible', True )
Gaffer.Metadata.registerValue( __children["OSLCode"], 'noduleLayout:customGadget:addButtonBottom:visible', True )
Gaffer.Metadata.registerValue( __children["OSLCode"], 'noduleLayout:customGadget:addButtonLeft:visible', True )
Gaffer.Metadata.registerValue( __children["OSLCode"], 'noduleLayout:customGadget:addButtonRight:visible', True )
__children["OSLCode"]["parameters"]["exposure"].setInput( __children["BoxIn"]["out"] )
__children["OSLCode"]["code"].setValue( 'out = color(u,u,u);\nout = out*pow(2,exposure);' )
__children["OSLCode"]["__uiPosition"].setValue( imath.V2f( -16.4621582, -19.9001484 ) )
__children["BoxIn"]["name"].setValue( 'exposure' )
__children["BoxIn"]["__in"].setInput( __children["exposure"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'label', 'exposure' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -29.4201469, -19.9001484 ) )
Gaffer.Metadata.registerValue( __children["exposure"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["exposure"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["exposure"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'description', '' )
Gaffer.Metadata.registerValue( __children["exposure"], 'label', 'exposure' )
Gaffer.Metadata.registerValue( __children["exposure"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["exposure"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["exposure"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["exposure"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["exposure"], 'deletable', True )
__children["Expression"]["__engine"].setValue( 'OSL' )
__children["Expression"]["__expression"].setValue( 'int xSize = parent.__in.p0;\nparent.__out.p0 = xSize;\nint ySize = parent.__in.p1;\nif (ySize == 0) ySize = xSize;\nparent.__out.p1 = ySize;' )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'description', 'Generate a linear gradient of the specified dimensions' )
Gaffer.Metadata.registerValue( parent, 'documentation:url', '' )


del __children

